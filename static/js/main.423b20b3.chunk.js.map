{"version":3,"sources":["components/Header/Header.jsx","layouts/DefaultLayout.jsx","components/common/AbsoluteLoader/AbsoluteLoader.jsx","components/TypingTest/InitialDialogue/InitialDialogue.jsx","services/api.js","redux/typingTestSlice.js","components/TypingTest/TypingText/TypingText.connect.js","components/TypingTest/TypingText/TypingText.jsx","components/TypingTest/Statistics/Parameter/Parameter.jsx","components/TypingTest/Statistics/Accuracy/Accuracy.jsx","components/TypingTest/Statistics/Accuracy/Accuracy.connect.js","components/TypingTest/Statistics/Speed/Speed.connect.js","components/TypingTest/Statistics/Speed/Speed.jsx","components/TypingTest/Statistics/Statistics.jsx","components/TypingTest/TypingTest.jsx","components/TypingTest/TypingTestContainer.connect.js","components/TypingTest/TypingTestContainer.jsx","components/ResultTest/EvaluationTable/EvaluationTable.jsx","components/ResultTest/YourResults/YourResults.connect.js","components/ResultTest/YourResults/YourResults.jsx","components/ResultTest/ResultTest.jsx","routes.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","theme","drawerHeader","mixins","toolbar","Header","classes","AppBar","position","Toolbar","Typography","variant","noWrap","style","flexGrow","Button","color","marginRight","to","className","DefaultLayout","children","backgroundStyle","zIndex","width","height","top","left","display","alignItems","justifyContent","backgroundColor","AbsoluteLoader","CircularProgress","InitialDialogue","useState","open","setOpen","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","target","href","onClick","TextApi","sentences","axios","then","res","data","initialState","text","isWrong","wrongCounter","launchPoint","speed","isFinished","typingTestSlice","createSlice","name","reducers","resetToZero","setText","state","payload","enterChar","Date","length","enterBackspace","setSpeed","actions","mapDispatchToProps","connect","typingTest","paper","padding","fontSize","lineHeight","MozUserSelect","msUserSelect","WebkitUserSelect","userSelect","input","overflow","border","outline","opacity","completed","current","borderRadius","wrong","useSnackbar","enqueueSnackbar","charArray","closeSnackbar","useMemo","Array","from","Paper","type","onChange","e","includes","value","toLocaleLowerCase","preventDuplicate","onKeyDown","key","onBlur","elem","currentTarget","setTimeout","focus","autoFocus","map","item","i","cls","classNames","title","columnGap","fontWeight","unit","Parameter","Icon","defaultProps","accuracy","toFixed","CheckCircleOutlineIcon","useEffect","Math","round","loop","setInterval","clearInterval","SpeedIcon","Statistics","root","margin","marginTop","flexDirection","rowGap","TypingTest","startTest","dispatch","TypingTestContainer","history","useHistory","isFirstRender","setIsFirstRender","push","propsTypes","PropTypes","string","func","isRequired","bool","table","thContent","rows","result","EvaluationTable","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","row","param","ResultTest","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","combineReducers","typingTestReducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.423b20b3.chunk.js","sourcesContent":["import { AppBar, Button, makeStyles, Toolbar, Typography } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerHeader: {\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  }\r\n}))\r\n\r\nconst Header = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap style={{ flexGrow: 1 }}>\r\n            Speedtyping\r\n          </Typography>\r\n\r\n          <Button variant=\"outlined\" color=\"inherit\" style={{ marginRight: '15px' }}>\r\n            <NavLink to=\"/test\">Тестирование</NavLink>\r\n          </Button>\r\n\r\n          <Button variant=\"outlined\" color=\"inherit\">\r\n            <NavLink to=\"/test/completed\">Информация о результатах</NavLink>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div className={classes.drawerHeader}></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import Header from \"../components/Header\"\r\n\r\nconst DefaultLayout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <main>{ children }</main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n","import { CircularProgress } from \"@material-ui/core\"\r\n\r\nconst backgroundStyle = {\r\n  position: 'absolute',\r\n  zIndex: '99',\r\n  width: '100%',\r\n  height: '100%',\r\n  top: '0',\r\n  left: '0',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.2)'\r\n}\r\n\r\nconst AbsoluteLoader = () => {\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AbsoluteLoader","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nconst InitialDialogue = () => {\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const handleClose = () => setOpen(false)\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Тест на скорость печати</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Набери небольшой текс. Проверь, сколько знаков в минуту ты печатаешь на английском языке.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"secondary\" target=\"_blank\" href=\"https://ru.wikipedia.org/wiki/Слепой_метод_печати\">\r\n            Узнать как печатать быстрее\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n            Начать печатать\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InitialDialogue\r\n","import * as axios from 'axios'\r\n\r\nexport const TextApi = {\r\n  getText: (sentences) => {\r\n    return axios.get(`https://baconipsum.com/api/?type=meat-and-filler&sentences=${sentences}`)\r\n      .then(res => res.data[0])\r\n  }\r\n}","import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { TextApi } from \"../services/api\"\r\n\r\nconst initialState = {\r\n  text: null,\r\n  position: 0,\r\n  isWrong: false,\r\n  wrongCounter: 0,\r\n  launchPoint: null,\r\n  speed: 0,\r\n\r\n  isFinished: false\r\n}\r\n\r\nconst typingTestSlice = createSlice({\r\n  name: 'typingTest',\r\n  initialState,\r\n\r\n  reducers: {\r\n    resetToZero: () => initialState,\r\n\r\n    setText: (state, { payload }) => { state.text = payload },\r\n\r\n    enterChar: (state, { payload }) => {\r\n      if (state.launchPoint === null)\r\n        state.launchPoint = new Date()\r\n\r\n      if (payload === state.text[state.position]) {\r\n        state.position += 1\r\n        state.isWrong = false\r\n      } else {\r\n        if (state.isWrong)\r\n          return\r\n        state.isWrong = true\r\n        state.wrongCounter += 1\r\n      }\r\n\r\n      if (state.position === state.text.length)\r\n        state.isFinished = true\r\n    },\r\n\r\n    enterBackspace: (state) => { if (state.isWrong) state.isWrong = false },\r\n\r\n    setSpeed: (state, { payload }) => { state.speed = payload }\r\n  }\r\n})\r\n\r\nexport default typingTestSlice.reducer\r\n\r\nexport const { resetToZero, setText, enterChar, enterBackspace, setSpeed } = typingTestSlice.actions\r\n\r\nexport const startTest = () => (dispatch) => {\r\n  dispatch(resetToZero())\r\n\r\n  TextApi.getText(6)\r\n    .then(data => dispatch(setText(data)))\r\n}","import { connect } from \"react-redux\"\r\nimport { enterChar, enterBackspace } from './../../../redux/typingTestSlice'\r\n\r\nconst mapStateToProps = ({ typingTest }) => ({\r\n  text: typingTest.text,\r\n  position: typingTest.position,\r\n  isWrong: typingTest.isWrong\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  enterChar,\r\n  enterBackspace\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)","import { makeStyles, Paper } from \"@material-ui/core\"\r\nimport classNames from 'classnames'\r\nimport { useMemo, useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport connect from './TypingText.connect'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst rusLower = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  paper: {\r\n    position: 'relative',\r\n    padding: '35px',\r\n    fontSize: '21px',\r\n    color: '#5c5c5c',\r\n    lineHeight: '32px',\r\n    MozUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n    WebkitUserSelect: 'none',\r\n    userSelect: 'none',\r\n  },\r\n\r\n  input: {\r\n    position: 'absolute',\r\n    zIndex: '-99',\r\n    height: '0px',\r\n    top: '0',\r\n    left: '0',\r\n    overflow: 'hidden',\r\n    border: 'none',\r\n    outline: '0',\r\n    opacity: 0,\r\n  },\r\n\r\n  completed: {\r\n    color: '#5bc538'\r\n  },\r\n\r\n  current: {\r\n    padding: '1px',\r\n    backgroundColor: '#5bc538',\r\n    color: 'white',\r\n    borderRadius: '2px'\r\n  },\r\n\r\n  wrong: {\r\n    backgroundColor: '#F36747',\r\n  }\r\n}))\r\n\r\nconst TypingText = ({ text, position, isWrong, enterChar, enterBackspace }) => {\r\n  const classes = useStyles()\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n\r\n  const charArray = useMemo(() => { return Array.from(text) }, [text])\r\n\r\n  const changeHandler = (e) => {\r\n    if (rusLower.includes(e.target.value.toLocaleLowerCase()))\r\n      enqueueSnackbar('Смените раскладку клавиатуры', {\r\n        variant: 'warning', preventDuplicate: true,\r\n      })\r\n    else\r\n      enterChar(e.target.value)\r\n  }\r\n\r\n  const keyDownHandler = (e) => {\r\n    if (e.key === 'Backspace')\r\n      enterBackspace()\r\n  }\r\n\r\n  const blurHandler = (e) => {\r\n    const elem = e.currentTarget\r\n    //MOZ\r\n    setTimeout(() => { elem.focus() }, 0)\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <input\r\n        type=\"text\"\r\n        className={classes.input}\r\n        onChange={changeHandler}\r\n        onKeyDown={keyDownHandler}\r\n        onBlur={blurHandler}\r\n        autoFocus\r\n        value=''\r\n      />\r\n\r\n      {\r\n        charArray.map((item, i) => {\r\n          const cls = classNames({\r\n            [classes.completed]: i < position,\r\n            [classes.current]: i === position,\r\n            [classes.wrong]: isWrong && i === position //?\r\n          })\r\n\r\n          return <span key={i} className={cls}>{item}</span>\r\n        })\r\n      }\r\n    </Paper>\r\n  )\r\n}\r\n\r\nTypingText.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  position: PropTypes.number.isRequired,\r\n  isWrong: PropTypes.bool.isRequired,\r\n  enterChar: PropTypes.func.isRequired,\r\n  enterBackspace: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(TypingText)\r\n","import { makeStyles, Typography } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '5px',\r\n    color: '#5c5c5c'\r\n  },\r\n\r\n  value: {\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  unit: {\r\n    fontSize: '14px'\r\n  }\r\n}))\r\n\r\nconst Parameter = ({ title, Icon, unit, value }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.title}>\r\n        <Icon /> {title}\r\n      </div>\r\n      <Typography className={classes.value} color=\"primary\" variant=\"h5\">\r\n        {value} <span className={classes.unit}>{unit}</span>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nParameter.defaultProps = {\r\n  value: 0\r\n}\r\n\r\nParameter.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  unit: PropTypes.string,\r\n  value: PropTypes.number,\r\n  Icon: PropTypes.object\r\n}\r\n\r\nexport default Parameter\r\n","import Parameter from '../Parameter'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport PropTypes from 'prop-types'\r\nimport connect from './Accuracy.connect'\r\n\r\nconst Accuracy = ({ accuracy }) => {\r\n  return (\r\n    <Parameter title=\"Точность\" unit=\"%\" Icon={CheckCircleOutlineIcon} value={accuracy} />\r\n  )\r\n}\r\n\r\nAccuracy.propTypes = {\r\n  accuracy: PropTypes.number.isRequired\r\n}\r\n\r\nexport default connect(Accuracy)\r\n","import { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = ({ typingTest }) => {\r\n  const { text, wrongCounter } = typingTest\r\n\r\n  return {\r\n    accuracy: +(((text.length) - wrongCounter) * 100 / (text.length)).toFixed(1)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)","import { connect } from \"react-redux\"\r\nimport { setSpeed } from './../../../../redux/typingTestSlice'\r\n\r\nconst mapStateToProps = ({ typingTest }) => ({\r\n  launchPoint: typingTest.launchPoint,\r\n  position: typingTest.position,\r\n  speed: typingTest.speed\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setSpeed\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)","import Parameter from './../Parameter'\r\nimport SpeedIcon from '@material-ui/icons/Speed'\r\nimport { useEffect } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport connect from \"./Speed.connect\"\r\n\r\nconst Speed = ({ launchPoint, position, speed, setSpeed}) => {\r\n\r\n  useEffect(() => {\r\n    setSpeed(Math.round(position / ((new Date() - launchPoint) / 60000)))\r\n\r\n    const loop = setInterval(() => {\r\n      setSpeed(Math.round(position / ((new Date() - launchPoint) / 60000)))\r\n    }, 1000)\r\n\r\n    return () => clearInterval(loop)\r\n  }, [launchPoint, position])\r\n\r\n  return (\r\n    <Parameter title=\"Скорость\" unit=\"зн/мин\" Icon={SpeedIcon} value={speed} />\r\n  )\r\n}\r\n\r\nSpeed.propTypes = {\r\n  launchPoint: PropTypes.instanceOf(Date),\r\n  position: PropTypes.number.isRequired,\r\n  speed: PropTypes.number.isRequired,\r\n  setSpeed: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(Speed)\r\n","import Accuracy from \"./Accuracy\"\r\nimport Speed from \"./Speed\"\r\n\r\nconst Statistics = () => {\r\n  return (\r\n    <div style={{ display: 'flex', columnGap: '40px' }}>\r\n      <Accuracy />\r\n      <Speed />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","import { Button, makeStyles } from \"@material-ui/core\"\r\nimport PropTypes from 'prop-types'\r\nimport TypingText from \"./TypingText\"\r\nimport Statistics from './Statistics'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '850px',\r\n    margin: '0 auto',\r\n    marginTop: '65px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '15px',\r\n    alignItems: 'flex-end'\r\n  },\r\n}))\r\n\r\nconst TypingTest = ({ startTest }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n\r\n      <Statistics />\r\n\r\n      <TypingText />\r\n\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={startTest}>Заново</Button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nTypingTest.propTypes = {\r\n  startTest: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TypingTest\r\n","import { connect } from \"react-redux\"\r\nimport { startTest } from './../../redux/typingTestSlice'\r\n\r\nconst mapStateToProps = ({ typingTest }) => ({\r\n  text: typingTest.text,\r\n  isFinished: typingTest.isFinished\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  startTest,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)","import { useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport PropTypes from 'prop-types'\r\nimport AbsoluteLoader from \"../common/AbsoluteLoader\"\r\nimport InitialDialogue from \"./InitialDialogue\"\r\nimport TypingTest from \"./TypingTest\"\r\nimport connect from './TypingTestContainer.connect'\r\n\r\nconst TypingTestContainer = ({ text, startTest, isFinished }) => {\r\n  const history = useHistory()\r\n  const [isFirstRender, setIsFirstRender] = useState(true)\r\n\r\n  useEffect(() => {\r\n    startTest()\r\n    setIsFirstRender(false)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isFinished && !isFirstRender) {\r\n      history.push('/test/completed')\r\n    }\r\n  }, [isFinished])\r\n\r\n  if (text === null)\r\n    return <AbsoluteLoader />\r\n\r\n  return (\r\n    <>\r\n      <InitialDialogue />\r\n      <TypingTest startTest={startTest} />\r\n    </>\r\n  )\r\n}\r\n\r\nTypingTestContainer.propsTypes = {\r\n  text: PropTypes.string,\r\n  startTest: PropTypes.func.isRequired,\r\n  isFinished: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(TypingTestContainer)\r\n","import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\r\nimport SpeedIcon from '@material-ui/icons/Speed'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  table: {\r\n    width: '400px'\r\n  },\r\n\r\n  thContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '5px'\r\n  }\r\n}))\r\n\r\nconst rows = [\r\n  { result: 'PLATINUM', speed: '350 зн/мин', accuracy: '99.5%' },\r\n  { result: 'GOLD', speed: '250 зн/мин', accuracy: '98.7%' },\r\n  { result: 'SILVER', speed: '200 зн/мин', accuracy: '96%' },\r\n]\r\n\r\nconst EvaluationTable = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.table}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><div className={classes.thContent}><EmojiEventsIcon /> Сертификат</div></TableCell>\r\n            <TableCell><div className={classes.thContent}><SpeedIcon /> Скорость</div></TableCell>\r\n            <TableCell><div className={classes.thContent}><CheckCircleOutlineIcon /> Точность</div></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, i) => (\r\n            <TableRow key={i}>\r\n              <TableCell>{row.result}</TableCell>\r\n              <TableCell>{row.speed}</TableCell>\r\n              <TableCell>{row.accuracy}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default EvaluationTable\r\n","import { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = ({ typingTest }) => {\r\n  const { speed, text, wrongCounter, isFinished } = typingTest\r\n\r\n  if (!isFinished)\r\n    return { isFinished }\r\n\r\n  return {\r\n    speed,\r\n    isFinished,\r\n    accuracy: +(((text.length) - wrongCounter) * 100 / (text.length)).toFixed(1)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SpeedIcon from '@material-ui/icons/Speed'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport connect from './YourResults.connect'\r\nimport { Button, makeStyles, Typography } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  param: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '5px'\r\n  }\r\n}))\r\n\r\nconst YourResults = ({ speed, accuracy, isFinished }) => {\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n\r\n  const clickHandler = () => {\r\n    history.push('/test')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isFinished &&\r\n        <>\r\n          <Typography variant=\"h5\" color=\"primary\">Ваши результаты:</Typography>\r\n          <Typography className={classes.param} variant=\"h6\"><SpeedIcon /> Скорость: {speed} зн/мин</Typography>\r\n          <Typography className={classes.param} variant=\"h6\"><CheckCircleOutlineIcon /> Точность: {accuracy}%</Typography>\r\n        </>\r\n      }\r\n\r\n      {\r\n        !isFinished &&\r\n        <Typography variant=\"h5\" color=\"primary\">Пройдите тестирование</Typography>\r\n      }\r\n\r\n      <Button variant=\"outlined\" color=\"secondary\" style={{ marginTop: '15px' }} onClick={clickHandler}>\r\n        {\r\n          isFinished\r\n            ? 'Повторить тестирование'\r\n            : 'Пройти тестирование'\r\n        }\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nYourResults.propTypes = {\r\n  speed: PropTypes.number,\r\n  accuracy: PropTypes.number,\r\n  isFinished: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(YourResults)\r\n","import { makeStyles } from \"@material-ui/core\"\r\nimport EvaluationTable from \"./EvaluationTable\"\r\nimport YourResults from \"./YourResults\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '900px',\r\n    margin: '0 auto',\r\n    marginTop: '65px',\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n  },\r\n}))\r\n\r\nconst ResultTest = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <YourResults />\r\n      <EvaluationTable />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResultTest\r\n","import { Redirect, Route, Switch } from \"react-router-dom\"\r\nimport TypingTestContainer from './components/TypingTest'\r\nimport ResultTest from './components/ResultTest'\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route path=\"/test\" exact component={TypingTestContainer} />\r\n\r\n    <Route path=\"/test/completed\" exact component={ResultTest} />\r\n\r\n    <Redirect to=\"/test\" />\r\n  </Switch>\r\n)","import DefaultLayout from \"./layouts\"\nimport Routers from './routes'\n\nfunction App() {\n  return (\n    <DefaultLayout>\n      <Routers />\n    </DefaultLayout>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\r\nimport { combineReducers } from \"redux\"\r\nimport typingTestReducer from './typingTestSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: combineReducers({\r\n    typingTest: typingTestReducer\r\n  }),\r\n  \r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }),\r\n})\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'fontsource-roboto'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { SnackbarProvider } from 'notistack'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <SnackbarProvider maxSnack={1}>\n          <App />\n        </SnackbarProvider>\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}